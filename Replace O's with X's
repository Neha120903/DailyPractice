// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String a[] = in.readLine().trim().split(" ");
            int n = Integer.parseInt(a[0]);
            int m = Integer.parseInt(a[1]);
            char mat[][] = new char[n][m];
            for(int i=0; i<n; i++)
            {
                String S[] = in.readLine().trim().split(" ");
                for(int j=0; j<m; j++)
                {
                    mat[i][j] = S[j].charAt(0);
                }
            }
            
            Solution ob = new Solution();
            char[][] ans = ob.fill(n, m, mat);
            for(int i = 0;i < n;i++) {
                for(int j = 0;j < m;j++) {
                    System.out.print(ans[i][j] + " ");
                }
                System.out.println();
            }
        }
    }
}// } Driver Code Ends


//User function Template for Java

class Solution{
    static void dfs(int i, int j, char[][]arr, int n, int m){
        if(i<0 || j<0 || i>=n || j>=m ||arr[i][j]=='X'){
            return;
        }
        if(arr[i][j]=='O'){
            arr[i][j]='$';
            dfs(i+1,j,arr,n,m);
            dfs(i,j+1,arr,n,m);
            dfs(i-1,j,arr,n,m);
            dfs(i,j-1,arr,n,m);
        }
    }
    static char[][] fill(int n, int m, char arr[][])
    {
        // code here
        for(int i=0; i<n;i++){
            dfs(i,0,arr,n,m);
            dfs(i,m-1,arr,n,m);
        }
        for(int j=0;j<m;j++){
            dfs(0,j,arr,n,m);
            dfs(n-1,j,arr,n,m);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(arr[i][j]=='$'){
                    arr[i][j]='O';
                }
                else if(arr[i][j]=='O'){
                    arr[i][j]='X';
                }
            }
        }
        return arr;
    }
}
